<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddressShip" xml:space="preserve">
    <value>Address ship</value>
  </data>
  <data name="BackSide" xml:space="preserve">
    <value>Back Side</value>
  </data>
  <data name="Black" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="Cart" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="ChangeAddress" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="changePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChooseError" xml:space="preserve">
    <value>Please choose materials!</value>
  </data>
  <data name="ChooseItem" xml:space="preserve">
    <value>Choose Item</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="Creative" xml:space="preserve">
    <value>VISION</value>
  </data>
  <data name="Creative_content" xml:space="preserve">
    <value>Create a meaningful creative community where people express themselves and develop their potential through the use of our self-designed notebook products.</value>
  </data>
  <data name="CreditCard" xml:space="preserve">
    <value>Credit Card/Debit Card</value>
  </data>
  <data name="Design" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="DesignByYourSelf" xml:space="preserve">
    <value>Design by your self</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="Doyou" xml:space="preserve">
    <value>Do you have an account?</value>
  </data>
  <data name="Forgot" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="FrontSide" xml:space="preserve">
    <value>Front Side</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="ImportDesign" xml:space="preserve">
    <value>Import your design</value>
  </data>
  <data name="IncorrectLogin" xml:space="preserve">
    <value>Incorrect username or password</value>
  </data>
  <data name="IncorrectNewPassword" xml:space="preserve">
    <value>Incorrect new password</value>
  </data>
  <data name="IncorrectOldPassword" xml:space="preserve">
    <value>Incorrect old password</value>
  </data>
  <data name="InputAddress" xml:space="preserve">
    <value>Input your address!</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="MaOTP" xml:space="preserve">
    <value>OTP has been send into your gmail, please check!</value>
  </data>
  <data name="Material" xml:space="preserve">
    <value>MISSION</value>
  </data>
  <data name="Material_content" xml:space="preserve">
    <value>Support and inspire people in creating a unique and personalized self-designed notebook product.</value>
  </data>
  <data name="NameOfNote" xml:space="preserve">
    <value>Name of notebook</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note (If any)</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Page numbers</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OTP" xml:space="preserve">
    <value>OTP Code</value>
  </data>
  <data name="OTPAuthen" xml:space="preserve">
    <value>OTP Authentication</value>
  </data>
  <data name="Paper" xml:space="preserve">
    <value>Type of paper</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="PaymentOn" xml:space="preserve">
    <value>Scan QR</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>products in your cart</value>
  </data>
  <data name="Product_content" xml:space="preserve">
    <value>Personalization, creativity, practicality ,sustainability</value>
  </data>
  <data name="Product_home" xml:space="preserve">
    <value>CORE VALUE:</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Road" xml:space="preserve">
    <value>Road</value>
  </data>
  <data name="SelectAPayment" xml:space="preserve">
    <value>Select a payment method</value>
  </data>
  <data name="Service" xml:space="preserve">
    <value>Tutorials</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Spring" xml:space="preserve">
    <value>Color of spiral</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TTCN" xml:space="preserve">
    <value>User's information</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>User's name</value>
  </data>
  <data name="Ward" xml:space="preserve">
    <value>Ward</value>
  </data>
  <data name="WatchDemo" xml:space="preserve">
    <value>Watch Demo</value>
  </data>
  <data name="White" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="Youhave" xml:space="preserve">
    <value>You have</value>
  </data>
  <data name="YourAddres" xml:space="preserve">
    <value>Your address is empty!</value>
  </data>
</root>