// <auto-generated />
using System;
using EXE.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EXE.Migrations
{
    [DbContext(typeof(Exe201Context))]
    [Migration("20240622151659_Initial1")]
    partial class Initial1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EXE.DataAccess.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialID"));

                    b.Property<int?>("NumberOfPage")
                        .HasColumnType("int");

                    b.Property<string>("PaperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpringName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("EXE.DataAccess.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EXE.DataAccess.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectID"));

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFront")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaterialID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ProjectID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("UserID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EXE.DataAccess.ProjectOrder", b =>
                {
                    b.Property<int>("ProjectOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectOrderID"));

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ProjectOrderID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ProjectOrders");
                });

            modelBuilder.Entity("EXE.DataAccess.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EXE.DataAccess.Order", b =>
                {
                    b.HasOne("EXE.DataAccess.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EXE.DataAccess.Project", b =>
                {
                    b.HasOne("EXE.DataAccess.Material", "Material")
                        .WithMany("Projects")
                        .HasForeignKey("MaterialID");

                    b.HasOne("EXE.DataAccess.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserID");

                    b.Navigation("Material");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EXE.DataAccess.ProjectOrder", b =>
                {
                    b.HasOne("EXE.DataAccess.Order", "Order")
                        .WithMany("ProjectOrders")
                        .HasForeignKey("OrderID");

                    b.HasOne("EXE.DataAccess.Project", "Project")
                        .WithMany("ProjectOrders")
                        .HasForeignKey("ProjectID");

                    b.Navigation("Order");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EXE.DataAccess.Material", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EXE.DataAccess.Order", b =>
                {
                    b.Navigation("ProjectOrders");
                });

            modelBuilder.Entity("EXE.DataAccess.Project", b =>
                {
                    b.Navigation("ProjectOrders");
                });

            modelBuilder.Entity("EXE.DataAccess.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
